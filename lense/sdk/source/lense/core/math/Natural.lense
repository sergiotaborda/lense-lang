
import lense.core.math.Whole;
import lense.core.math.Progressable;
import lense.core.math.Integer;
import lense.core.math.Rational;
import lense.core.math.Comparable;
import lense.core.collections.Progression;
import lense.core.lang.String;

public interface Natural extends Whole , Progressable<Natural> , Comparable<Natural>{


	//public constructor parse(text :String); 

	public minus ( other: Natural)  : Integer;
	public plus ( other: Natural) : Natural;
	public multiply ( other: Natural) : Natural;
		
	public multiply ( other: Integer) : Integer;
			
	public raiseTo( other: Natural) : Natural;
	public raiseTo( other: Integer) : Rational;
	public raiseTo( other: Real) : Real;
	public remainder (other : Natural) : Natural; 	
	public wholeDivide (other : Natural) : Natural; 	
	public wholeDivide (other : Integer) : Integer; 	
	
	public upTo( other: Natural) : Progression<Natural>;

}