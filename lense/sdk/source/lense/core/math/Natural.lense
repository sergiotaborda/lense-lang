
import lense.core.math.Whole;
import lense.core.math.Progressable;
import lense.core.math.Integer;
import lense.core.math.Rational;
import lense.core.math.Comparable;
import lense.core.collections.Progression;

public native class Natural extends Whole implements Progressable<Natural> , Comparable<Natural>{


	public constructor parse(text :String); 

	public native minus ( other: Natural)  : Integer;
	public native plus ( other: Natural) : Natural;
	public native multiply ( other: Natural) : Natural;
		
	public native multiply ( other: Integer) : Integer;
			
	public native raiseTo( other: Natural) : Natural;
	public native raiseTo( other: Integer) : Rational;
	public native raiseTo( other: Real) : Real;
	public native remainder (other : Natural) : Natural; 	
	
	
	public native upTo( other: Natural) : Progression<Natural>;
	public native symmetric(): Integer;
}