
import lense.core.math.Number;
import lense.core.lang.Boolean;
import lense.core.math.SignedNumber;

public interface Real extends Number , Comparable<Real>, SignedNumber {

	//public native constructor zero();
	//public native constructor one();

	//public native implicit constructor valueOf(whole : Whole);

	public abs(): Real;
	
	public symmetric() : Real;
	
	public isZero() : Boolean;
	public isNegative() : Boolean;
	public isPositive() : Boolean;
	
	public signum() : Integer;
	public plus (other: Real): Real;
	public minus (other: Real): Real;
	public multiply (other: Real): Real;
	public divide (other: Real): Real;
	
	public plus (other: Imaginary): Complex;
	public minus (other: Imaginary): Complex;
	public multiply (other: Imaginary): Imaginary;
	public divide (other: Imaginary): Imaginary;
	
	public raiseTo(other : Real) : Real;
	
	public asInteger() : Integer;

    public isWhole() : Boolean;
}