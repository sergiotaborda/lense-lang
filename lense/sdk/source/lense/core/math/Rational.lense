
import lense.core.math.Real;
import lense.core.math.Integer;
import lense.core.math.Natural;
import lense.core.lang.String;
import lense.core.lang.Boolean;
import lense.core.math.ArithmeticException;
import lense.core.math.Greater;
import lense.core.math.Smaller;
import lense.core.math.Equal;
import lense.core.math.BigDecimal;
import lense.core.math.equal;
import lense.core.math.Comparable;
import lense.core.math.BigRational;

/{
 	A fraction n/d 
}/
public interface Rational extends Real {

	public native constructor fraction(numerator : Whole, denominator : Whole);

	public native constructor one();

	public native constructor zero();

	public native implicit  constructor valueOf(other : Whole);

	public native implicit  constructor valueOf(other : Integer);

	public numerator : Integer;
	public denominator : Natural;

	public invert() : Rational;

}