
import lense.core.math.Natural;
import lense.core.lang.Boolean;
import lense.core.lang.ExclusiveDijunctable;
import lense.core.lang.Dijunctable;
import lense.core.lang.Injunctable;

public interface Binary extends ExclusiveDijunctable<Binary> , Dijunctable<Binary> , Injunctable<Binary>{

	public  bitsCount : Natural {get;} 
	
	// ~operator
	public complement() : Binary; // TODO change to return Self
	
	// << operator
	public rightShiftBy( n : Natural) : Binary;
	
	// >> operator
	public leftShiftBy( n: Natural) : Binary;
	
	public bitAt( index: Natural) : Boolean; 
}
