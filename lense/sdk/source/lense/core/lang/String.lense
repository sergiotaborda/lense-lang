
import lense.core.lang.Character;
import lense.core.lang.Maybe;
import lense.core.collections.Sequence;
import lense.core.lang.Boolean;
import lense.core.math.Natural;

public native class String  implements Sequence<Character> satisfies Concatenable<String, String, String> {


   public satisfy concatenate(a : String, b: String) : String {
      return a.concat(b);
   }
   
	public native concat( other : String): String;

	public native indexOf( other : String) : Natural?;

	public native subString( start : Natural, length: Natural) : String;
	public native subString( start : Natural) : String;

	public native removeAt( position : Natural) : String;

	public native starstWith( other : String ) : Boolean;
	public native endsWith( other : String ) : Boolean;
} 