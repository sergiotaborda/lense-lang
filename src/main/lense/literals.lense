
import lense.core.collections.Sequence;
import lense.core.collections.Association;
import lense.core.collections.Tuple;
import lense.core.math.Natural;
import lense.core.lang.String;
import lense.core.lang.Boolean;
import lense.core.math.Integer;

public class testeLiterals {

	public Void main( (Natural, String, Integer, Boolean) params){
	
		
		var Sequence<Natural> array = [ 1, 2, 3 ];
		
		var Sequence<Natural> single = [ 1 ];
	
		var Association<Natural, Natural> map = { 1:2 , 3:4, 5:6 };
		
		var Tuple<Natural, Tuple<String, Tuple<Integer, Tuple<Boolean, Nothing>>>> tuple = ( 1 , "2" , -3Z , true);
		
		
		
		var (Natural , String , Integer , Boolean) otherTuple = ( 1 , "2" , -3Z , true );
		
		main(otherTuple);
		
		var Natural n = tuple[0];
		var String  s = tuple[1];
		var Integer i = tuple[2];
		var Boolean b = tuple[3];
		//var Boolean b2 = tuple[4]; // needs cast because is out of bounds.
		
		Integer index = 2;
		//var Integer ii = tuple[index];  // needs cast because its dynamic
		
		var Void voidTuple2 = ();
		var Tuple<Nothing,Nothing> voidTuple3 = ();
		
		//main(("hello",2));
	}

}